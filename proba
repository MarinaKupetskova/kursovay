#include <stdio.h> 
#include <string.h> 
#include "pch.h" 
#include <iostream> 
#include <malloc.h> 
#include <stdlib.h>

int *dlina(int **dlin, char *str, char *raz) {
	int k = 0; int l = 1;
	int flag = 0;
	dlin[k] = (int*)malloc( sizeof(int)*(l+1));
	dlin[k][0] = 0;
	dlin[k][l] = 0;
	for (int i = 0; i < (strlen(str)); i++) {
		for (int j = 0; j < strlen(raz); j++)
			if (str[i] != raz[j])
				flag++;
			if (flag == strlen(raz))
			dlin[k][l]++;
			if (flag!=strlen(raz )and str[i+1]!='\0') {
				l++;
				dlin[k] = (int*)realloc(dlin[k], sizeof(int)*(l + 1));
				dlin[k][l] = 0;
			}
			flag = 0;

	}
	dlin[k][0] = l+1;
	k++;
	return dlin[k-1];
}

int  proverka( int *dlina) {
	int flag = 0;
	int dlin_curr = 0;
	int dlin = 0;
	for (int i = 1; i <( dlina[0]-1); i++) 
			if( dlina[(i + 1)] < dlina[i])
				return 1;
	
	return 0;
}
char* del(char *str ,int *dl, int st_len) {
	for (int i=1;i<dl[0];i++)
			if (dl[i]== st_len) {
				free(str);
				str = NULL;
				return str;
			}
	return str;
}
char *remove_fw(char *str, int *dl) {
	int i = 0; int fl = 0; int dlin = 0; int k = 0;   
	if (str != NULL) {
		k = strlen(str) - dl[1];
		for (int i = 0; i < k; i++)
			str[i] = str[i + dl[1]];
		str[k] = '\0';
	}
	return str;
}
int main() {
	int **dlin = NULL;
	char **str; int *uk;
	int ch; int flag = 1; int i = 0;
	int size = 1, len = 0;
	str = (char**)malloc(sizeof(char*));
	while (flag != 0) {
		str = (char**)realloc(str, sizeof(char*)*(i + 1));
		str[i] = (char*)realloc(NULL, sizeof(char));
		dlin = (int **)realloc(dlin, sizeof(int*)*(i + 1));
		if (i == 0)
			printf("vvod razdel   ");
		else
			printf("\n vvod  ");
		len = 0;
		while ((ch = getc(stdin)) && ch != EOF && ch != '\n')
		{
			str[i][len++] = (char)ch;
			str[i] = (char*)realloc(str[i], sizeof(char)*(size += 1));
		}
		str[i][len] = '\0';
		if (i != 0)
		{
			dlin[i] = (dlina(dlin, str[i], str[0]));
			flag = proverka(dlin[i]);
		}
		i++;
	}
	printf("\n len of word: ");
	scanf_s("%d", &len);
	for (int j = 1; j < (i ); j++) {
		str[j] = del(str[j], dlin[j] , len);
		str[j] = remove_fw(str[j], dlin[j]);
	}
		for (int j = 1; j < i; j++)
			if (str[j] != NULL)
				printf("%s\n", str[j]);
		for (int j = 0; j < i; j++)
			free(str[j]);
		free(str);
		for (int j = 1; j < i; j++)
			free(dlin[j]);
		free(dlin);
		return 0;
	}
